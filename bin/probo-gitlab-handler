#! /usr/bin/env node

'use strict';

const Loader = require('yaml-config-loader');
const path = require('path');
const util = require('util');
const yargs = require('yargs');

const handler = require('../handler');

const loader = new Loader();

loader.on('error', error => {
  if (error.name === 'YAMLException') {
    console.error(util.print('Error parsing YAML file `', error.filePath, '`:', error.reason));
    console.log(error);
  }
});

// Sets the command options.
var argv = yargs
  .describe('config', 'A YAML config file or directory of yaml files to load, can be invoked multiple times and later files will override earlier.')
  .alias('config', 'c');

let executor = handler;

if (executor.options) {
  argv = executor.options(yargs);
}

// Gets the arguments.
argv = argv.argv;

loader.add(path.resolve(path.join(__dirname, '..', 'defaults.yaml')));
loader.addAndNormalizeObject(process.env);

if (argv.c) {
  if (typeof argv.c === 'string') {
    argv.c = [argv.c];
  }
  for (let i in argv.c) {
    loader.add(path.resolve(argv.c[i]));
  }
}

if (executor.options) {
  let setOptions = {};
  let key = null;
  for (key in argv) {
    if (argv[key] !== undefined) {
      setOptions[key] = argv[key];
    }
  }

  loader.addAndNormalizeObject(setOptions);
}

loader.load((error, config) => {
  if (error) throw error;
  if (executor.configure) {
    executor.configure(config);
  }
  executor.run();
});
